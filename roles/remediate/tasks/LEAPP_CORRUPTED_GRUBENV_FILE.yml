---
- name: LEAPP_CORRUPTED_GRUBENV_FILE | Detected a corrupted grubenv file
  vars:
    entry_title: Detected a corrupted grubenv file
    leapp_report_location: /var/log/leapp/leapp-report.json
  block:
    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Check that the leapp-report.json exists
      stat:
        path: "{{ leapp_report_location }}"
      register: leapp_report_stat

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | End play if no leapp report exists
      meta: end_play
      when: leapp_report_stat.stat.exists is false

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Read leapp report
      slurp:
        src: "{{ leapp_report_location }}"
      register: leappreport

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Parse leapp report to json
      set_fact:
        leappreportdata: "{{ leappreport.content | b64decode | from_json }}"

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Find matching entries
      set_fact:
        hint: "{{ item.detail.remediations | selectattr('type', 'eq', 'hint') | first }}"
      loop: "{{ leappreportdata.entries }}"
      when: item.title is match(entry_title) and (item.detail.remediations | selectattr('type', 'eq', 'hint') | length > 0)

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Extract file(s) using regex
      set_fact:
        files_grub: "{{ hint.context | regex_findall('Delete (.+?) file', '\\1') | first | split(',') | map('trim') }}"

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Backup file(s)
      copy:
        src: "{{ item }}"
        dest: "{{ item }}.backup"
      with_items: "{{ files_grub }}"

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Find grub.cfg file
      command: find /boot -name 'grub.cfg'
      register: grub_cfg_path

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Backup grub.cfg file
      copy:
        src: "{{ grub_cfg_path.stdout }}"
        dest: "{{ grub_cfg_path.stdout }}.backup"

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Delete file(s)
      file:
        path: "{{ item }}"
        state: absent
      with_items: "{{ files_grub }}"

    - name: LEAPP_CORRUPTED_GRUBENV_FILE | Regenerate grub config
      command: grub2-mkconfig -o {{ grub_cfg_path.stdout }}

...
